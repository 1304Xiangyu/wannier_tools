OBJ =  module.o wt_aux.o math_lib.o symmetry.o readHmnR.o inverse.o proteus.o \
       eigen.o ham_qlayer2qlayer.o psi.o unfolding.o \
  		 ham_slab.o ham_bulk.o ek_slab.o ek_bulk_polar.o ek_bulk.o \
       readinput.o fermisurface.o surfgreen.o surfstat.o \
  		 mat_mul.o ham_ribbon.o ek_ribbon.o \
       fermiarc.o berrycurvature.o \
  		 wanniercenter.o dos.o  orbital_momenta.o \
  		  berry.o wanniercenter_adaptive.o \
  		 effective_mass.o findnodes.o sigma_AHC.o \
       main.o

# compiler
#F90  = /Users/user/quan/work/workplace/mpich/mpich-3.2.1-gfortran/bin/mpif90 -cpp -DMPI
#F90  = gfortran -cpp                                              
F90=mpif90 -fpp
flag = -O3  -nogen-interface #-pg -check all -traceback 
#flag = -O3 -ffree-line-length-512 #-g -Wall -Wextra -Warray-temporaries -Wconversion -fimplicit-none -fbacktrace -ffree-line-length-0 -fcheck=all -ffpe-trap=zero,overflow,underflow -finit-real=nan

INCLUDE = -I${MKLROOT}/include
WFLAG = #-warn all -nogen-interface
OFLAG = #-O3  -static-intel
FFLAG = $(OFLAG) $(WFLAG) $(flag)
LFLAG = $(OFLAG)

# blas and lapack libraries
# static linking
#LIBS = -Wl, ${MKLROOT}/lib/libmkl_intel_lp64.a \
        ${MKLROOT}/lib/libmkl_sequential.a \
        ${MKLROOT}/lib/libmkl_core.a -Wl, -lpthread -lm -ldl

# dynamic linking
LIBS = -L/${MKLROOT}/lib -lmkl_core -lmkl_sequential -lmkl_intel_lp64 -lpthread
 
main : $(OBJ)
	$(F90) $(LFLAG) $(OBJ) -o wt.x $(LIBS)
	cp -f wt.x ../bin

.SUFFIXES: .o .f90

.f90.o :
	$(F90) $(FFLAG) $(INCLUDE) -c $*.f90

clean :
	rm -f *.o *.mod *~ wt.x

